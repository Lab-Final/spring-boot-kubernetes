# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarCloud'
    organization: 'lab-final'
    projectKey: 'Lab-Final_spring-boot-kubernetes'
    projectName: 'spring-boot-kubernetes'
  
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: sonarcloud-buildbreaker@2
  inputs:
    SonarCloud: 'sonarCloud'
    organization: 'lab-final'

- task: dependency-check-build-task@6
  inputs:
    projectName: 'spring-boot-kubernetes'
    scanPath: '$(Build.SourcesDirectory)/target'
    format: 'HTML'
    reportsDirectory: '$(Build.SourcesDirectory)/reportes'
  
- script: |
    nhigh=$(grep ",HIGH," $(Build.SourcesDirectory)/reportes/dependency-check-report.csv | wc -l)
    echo $nhigh "Deteccion de vulnerabilidades"
    if [ $nhigh -gt 0 ];
      then 
        echo "Quiebre por incumplimiento de QG" $nhigh " > 0 HIGH Vulnerabilities"
      exit 1;
    fi;