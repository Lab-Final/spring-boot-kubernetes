# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarCloud'
    organization: 'lab-final'
    projectKey: 'Lab-Final_spring-boot-kubernetes'
    projectName: 'spring-boot-kubernetes'
  
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: sonarcloud-buildbreaker@2
  inputs:
    SonarCloud: 'sonarCloud'
    organization: 'lab-final'
  
- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'
    
- task: Docker@2
  inputs:
    containerRegistry: 'Docker-lab'
    command: 'login'
    
- task: Docker@2
  inputs:
    containerRegistry: 'Docker-lab'
    repository: 'lytch000/spring-boot-kubernetes'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'
- task: Docker@2
  inputs:
    containerRegistry: 'Docker-lab'
    repository: 'lytch000/spring-boot-kubernetes'
    command: 'push'
    tags: 'latest'
  displayName: Docker Push
