# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: ContainerSecurity 
  jobs:
  - job: Container_Security
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
        
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker-lab'
        command: 'login'
        
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker-lab'
        repository: 'lytch000/spring-boot-kubernetes'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'
        
    - script: |
            sudo apt-get install -y rpm
            wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
            sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
            trivy image -s "HIGH" --exit-code 1 lytch000/spring-boot-kubernetes:latest
            echo "Se encontraron vulnerabilidades del tipo HIGH"
            if [ trivy image -s "HIGH" lytch000/spring-boot-kubernetes:latest ];
            then 
              echo "Se encontraron vulnerabilidades del tipo HIGH"
              exit 1;
            fi;
      displayName: Image Scan
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker-lab'
        repository: 'lytch000/spring-boot-kubernetes'
        command: 'push'
        tags: 'latest'
      displayName: Docker Push
